<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise the PlayerStats object
display_set_gui_size(view_wview[0], view_hview[0]);

//Initialise some vars
hp = 3;
maxhp = 3;
sapphires = 0;
score = 0;
highscore = 0;
time = 0;
max_stamina = 100;
stamina = max_stamina;
sapphires_to_be_deducted = 0;
//sapphires_to_be_deducted_gui = 0;
//global.number_of_enemies_killed_in_room = 0;
levelOverStr = "";
levelOverStrings[0] = "Well doneee!";
levelOverStrings[1] = "Niiiice!";
levelOverStrings[2] = "Congratzzz!";
levelOverStrings[3] = "Fanataaaastic!";
levelOverStrings[4] = "Yusss!";
levelOverStrings[5] = "Siiiiiiick!";
levelOverStrings[6] = "O M G !";
levelOverStrings[7] = "Hey, Big Scorer!";
levelOverStrings[8] = "Such score!";
levelOverStrings[9] = "YAAAAAAAY!";
levelOverStrings[10] = "WOOP WOOP!";

for (var i=0; i&lt;100; i++) {
    number_of_sapphires_collected[i] = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle room input (start game, level over screen, highscore screen etc.)
var start = keyboard_check_pressed(vk_space);
var restart = keyboard_check_pressed(ord('X'));
var cont = start;

if (gamepad_is_connected(0)) {
    start = gamepad_button_check_pressed(0, gp_start); //gp_start
    restart = gamepad_button_check_pressed(0, gp_face3); // X
    cont = gamepad_button_check_pressed(0, gp_face1);;
}

if (start == true &amp;&amp; room = rm_menu) {
    room_goto(rm_one);
}

if (cont == true and room = rm_death) {
    room_goto(global.currentRoom);
}

if (restart == true and room = rm_levelOver) {
    room_goto(global.currentRoom);
}
if (cont == true and room = rm_levelOver) {
    room_goto(global.currentRoom+1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.room_from = room;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Play background music

// Create an audio emitter


audio_em = audio_emitter_create();
audio_emitter_gain(audio_em, 1);
audio_play_sound_on(audio_em, snd_music, true, 10);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the stats

switch(room) {
    case rm_menu :
        //Draw menu
        draw_set_halign(fa_center);
        draw_set_font(fnt_title);
        draw_text_colour(room_width/2+4, 64+6, "GraviBlock", c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, 64, "GraviBlock", c_white, c_white, c_white, c_white, 1);
        
        var str;
        if (gamepad_is_connected(0)) {
            str = "Press [Start]";
        } else {
            str = "Press [Space]";
        }
        
        draw_set_font(fnt_start);
        draw_text_colour(room_width/2+2, room_height-44, str, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, room_height-48, str, c_ltgray, c_ltgray, c_ltgray, c_ltgray, 1);
        break;
        
    case rm_highscore :
        draw_set_halign(fa_center);
        draw_text_colour(view_wview[0]/2, 64+16, "Your Time was " + string(time/room_speed), c_white, c_white, c_white, c_white, 1); 
        draw_text_colour(view_wview[0]/2, 96+16, "Your Score was " + string(score), c_white, c_white, c_white, c_white, 1);
        draw_text_colour(view_wview[0]/2, 128+16, "The Highscore was " + string(highscore), c_white, c_white, c_white, c_white, 1);
        
        break;
    
    case rm_death :
        //Draw death screen
        draw_set_halign(fa_center);
        draw_set_font(fnt_title);
        draw_text_colour(room_width/2+4, 64+6, "You died!", c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, 64, "You died!", c_white, c_white, c_white, c_white, 1);
        
        //Draw number of sapphires to be deducted
        draw_set_font(fnt_start);
        draw_text_colour(room_width/2+2, room_height/2+4, "-1", c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, room_height/2, "-1", c_white, c_white, c_white, c_white, 1); 
        draw_sprite_ext(spr_sapphire_gui, 0, room_width/2+32, room_height/2+16, 1, 1, 0, c_white, 1);
        
        var str;
        if (gamepad_is_connected(0)) {
            str = "[A] try again";
        } else {
            str = "[Space] try again";
        }
        
        draw_set_font(fnt_start);
        draw_text_colour(room_width/2+2, room_height-44, str, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, room_height-48, str, c_ltgray, c_ltgray, c_ltgray, c_ltgray, 1);
        break;
    
    case rm_levelOver :
        //Draw level over screen
        
        //Draw random level complete message
        draw_set_halign(fa_center);
        draw_set_font(fnt_title);
        
        draw_text_colour(room_width/2+4, 64+6, levelOverStr, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, 64, levelOverStr, c_white, c_white, c_white, c_white, 1);
        
        //Draw number of sapphires collected
        draw_set_font(fnt_start);
        draw_text_colour(room_width/6+2-16, room_height/2+4, abs(global.sapphires_collected_in_room), c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/6-16, room_height/2, abs(global.sapphires_collected_in_room), c_white, c_white, c_white, c_white, 1); 
        draw_sprite_ext(spr_sapphire_gui, 0, room_width/6+32, room_height/2+16, 1, 1, 0, c_white, 1);
        
        draw_set_font(fnt_start);
        draw_text_colour(3*room_width/6+2-16, room_height/2+4, abs(global.number_of_direct_enemy_kills_in_room), c_black, c_black, c_black, c_black, 1);
        draw_text_colour(3*room_width/6-16, room_height/2, abs(global.number_of_direct_enemy_kills_in_room), c_white, c_white, c_white, c_white, 1); 
        draw_sprite_ext(spr_player_jump, 0, 3*room_width/6+32, room_height/2+16, 1, 1, 0, c_white, 1);
        
        draw_set_font(fnt_start);
        draw_text_colour(5*room_width/6+2-16, room_height/2+4, abs(global.number_of_enemy_kills_in_room-global.number_of_direct_enemy_kills_in_room), c_black, c_black, c_black, c_black, 1);
        draw_text_colour(5*room_width/6-16, room_height/2, abs(global.number_of_enemy_kills_in_room-global.number_of_direct_enemy_kills_in_room), c_white, c_white, c_white, c_white, 1); 
        draw_sprite_ext(spr_dirt_Graviblock, 0, 5*room_width/6+16, room_height/2, 1, 1, 0, c_white, 1);
        
        var str;
        if (gamepad_is_connected(0)) {
            str = "[X] try again  /  [A] continue";
        } else {
            str = "[X] try again  /  [Space] continue";
        }
        
        draw_set_font(fnt_start);
        draw_text_colour(room_width/2+2, room_height-44, str, c_black, c_black, c_black, c_black, 1);
        draw_text_colour(room_width/2, room_height-48, str, c_ltgray, c_ltgray, c_ltgray, c_ltgray, 1);
        break;
    
    default:
        // Draw the heart spaces
        for (var i=0; i&lt;maxhp; i++) {
            draw_sprite_ext(spr_heart, 0, 24+i*36, 20, 1, 1, 0, c_black, .5);
        }
        
        //Draw the hearts
        for (var i=0; i&lt;hp; i++) {
            draw_sprite_ext(spr_heart, 0, 24+i*36, 20, 1, 1, 0, c_white, 1);
        }
        
        //Draw the sapphire count
        draw_set_halign(fa_right);
        draw_set_font(fnt_start);
        var str = "x"+string(sapphires);
        draw_text_colour(view_wview[0]-16, 8, str, c_white, c_white, c_white, c_white, 1);
        
        var text_width = string_width(str);
        draw_sprite(spr_sapphire_gui, 0, view_wview[0]-32-text_width, 22);
        
        //Adding to time stat
        time += 1;
        
        //Draw the timer
        //draw_text_colour(view_wview[0]/2, 8, string(floor(time/room_speed)), c_white, c_white, c_white, c_white, 1);
        
        //Draw the sapphires collected
        //draw_text_colour(view_wview[0]/2 + 64, 8, string(global.sapphires_collected_in_room), c_white, c_white, c_white, c_white, 1);
        break;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End the game
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
